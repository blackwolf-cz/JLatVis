/*
 * LineSetting.java
 *
 * Created on 23.6.2009, 19:04:31
 */

package kandrm.JLatVis.gui.settings.visual;

import kandrm.JLatVis.guiConnect.settings.visual.LineTypesModel;
import java.awt.Color;
import javax.swing.JColorChooser;
import kandrm.JLatVis.lattice.visual.DashingPattern;

/**
 *
 * @author Michal Kandr
 */
public class LineSetting extends javax.swing.JPanel {
    private LineTypesModel lineTypesModel = new LineTypesModel();
    private boolean isSearch;
    private Color color;

    public LineSetting() {
        this(false);
    }
    public LineSetting(boolean isSearch) {
        initComponents();
        this.isSearch = isSearch;
    }

    public Color getLineColor() {
        return colorDisable.isSelected() ? null : color;
    }
    public void setLineColor(Color color) {
        SettingUtils.showDisableIfNull(colorDisable, color, isSearch);
        if(color != null){
            this.color = color;
            colorButton.setBackground(color);
        }
    }

    public DashingPattern getLineDashing() {
        return lineTypeDisable.isSelected() ? null : lineTypesModel.getDashing(lineTypeComboBox.getSelectedIndex());
    }
    public void setLineDashing(DashingPattern dashing) {
        SettingUtils.showDisableIfNull(lineTypeDisable, dashing, isSearch);
        if(dashing != null){
            lineTypeComboBox.setSelectedItem(lineTypesModel.getNameByDashig(dashing));
        }
    }

    public Integer getLineWidth(){
        return widthDisable.isSelected() ? null : Integer.valueOf(widthSpinner.getValue().toString());
    }
    public void setLineWidth(Integer width){
        SettingUtils.showDisableIfNull(widthDisable, width, isSearch);
        if(width != null){
            widthSpinner.setValue(width);
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        widthLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        widthSpinner = new javax.swing.JSpinner();
        pxLabel = new javax.swing.JLabel();
        lineTypeComboBox = new javax.swing.JComboBox();
        colorButton = new javax.swing.JButton();
        colorLabel = new javax.swing.JLabel();
        widthDisable = new javax.swing.JCheckBox();
        lineTypeDisable = new javax.swing.JCheckBox();
        colorDisable = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        widthLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        widthLabel.setText("Width");
        widthLabel.setPreferredSize(new java.awt.Dimension(50, 14));
        widthLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(widthLabel, gridBagConstraints);

        typeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        typeLabel.setText("Line type");
        typeLabel.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        add(typeLabel, gridBagConstraints);

        widthSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        widthSpinner.setPreferredSize(new java.awt.Dimension(60, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, widthDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), widthSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        add(widthSpinner, new java.awt.GridBagConstraints());

        pxLabel.setText("px");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(pxLabel, gridBagConstraints);

        lineTypeComboBox.setModel(lineTypesModel);
        lineTypeComboBox.setPreferredSize(new java.awt.Dimension(60, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lineTypeDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), lineTypeComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lineTypeComboBox, gridBagConstraints);

        colorButton.setPreferredSize(new java.awt.Dimension(60, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, colorDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), colorButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        colorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(colorButton, gridBagConstraints);

        colorLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        colorLabel.setText("Color");
        colorLabel.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        add(colorLabel, gridBagConstraints);

        widthDisable.setText(SettingUtils.getDisableText(isSearch));
        add(widthDisable, new java.awt.GridBagConstraints());

        lineTypeDisable.setText(SettingUtils.getDisableText(isSearch));
        lineTypeDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineTypeDisableActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(lineTypeDisable, gridBagConstraints);

        colorDisable.setText(SettingUtils.getDisableText(isSearch));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(colorDisable, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void colorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButtonActionPerformed
        Color selectedColor = JColorChooser.showDialog(this, "Choose color", color);
        if(selectedColor != null){
            setLineColor(selectedColor);
        }
}//GEN-LAST:event_colorButtonActionPerformed

    private void lineTypeDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineTypeDisableActionPerformed
        if( ! lineTypeDisable.isSelected()){
            lineTypeComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_lineTypeDisableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton colorButton;
    private javax.swing.JCheckBox colorDisable;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JComboBox lineTypeComboBox;
    private javax.swing.JCheckBox lineTypeDisable;
    private javax.swing.JLabel pxLabel;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JCheckBox widthDisable;
    private javax.swing.JLabel widthLabel;
    private javax.swing.JSpinner widthSpinner;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
