/*
 * ShapeSetting.java
 *
 * Created on 23.6.2009, 20:03:15
 */

package kandrm.JLatVis.gui.settings.visual;

import java.awt.Color;
import javax.swing.JColorChooser;

/**
 *
 * @author Michal Kandr
 */
public class ShapeSetting extends javax.swing.JPanel {
    private boolean isSearch;
    private boolean canDisableDimensions;
    
    private Color color;

    public ShapeSetting() {
        this(true, false, false);
    }
    public ShapeSetting(boolean isSearch) {
        this(true, isSearch, false);
    }
    public ShapeSetting(boolean isSearch, boolean canDisableDimensions) {
        this(true, isSearch, canDisableDimensions);
    }
    public ShapeSetting(boolean showAngle, boolean isSearch, boolean canDisableDimensions) {
        initComponents();

        if( ! showAngle){
            getLayout().removeLayoutComponent(angleLabel);
            getLayout().removeLayoutComponent(angleSpinner);
            getLayout().removeLayoutComponent(degreesLabel);
            remove(angleLabel);
            remove(angleSpinner);
            remove(degreesLabel);
        }
        
        this.isSearch = isSearch;
        this.canDisableDimensions = canDisableDimensions;
    }

    public Integer getShapeWidth(){
        return widthDisable.isSelected() && ! canDisableDimensions ? null : Integer.valueOf(widthSpinner.getValue().toString());
    }
    public void setShapeWidth(Integer width){
        SettingUtils.showDisableIfNull(widthDisable, width, isSearch || canDisableDimensions);
        if(width != null){
            if(canDisableDimensions && width == 0){
                widthDisable.setSelected(true);
            }
            widthSpinner.setValue(width);
        }
    }

    public Integer getShapeHeigh(){
        return widthDisable.isSelected() && ! canDisableDimensions ? null : Integer.valueOf(heightSpinner.getValue().toString());
    }
    public void setShapeHeigh(Integer height){
        SettingUtils.showDisableIfNull(heightDisable, height, isSearch || canDisableDimensions);
        if(height != null){
            if(canDisableDimensions && height == 0){
                heightDisable.setSelected(true);
            }
            heightSpinner.setValue(height);
        }
    }

    public Integer getShapeAngle(){
        return angleDisable.isSelected() ? null : Integer.valueOf(angleSpinner.getValue().toString());
    }
    public void setShapeAngle(Integer angle){
        SettingUtils.showDisableIfNull(angleDisable, angle, isSearch);
        if(angle != null){
            angleSpinner.setValue(angle);
        }
    }

    public Color getBackgroundColor() {
        return colorDisable.isSelected() ? null : color;
    }
    public void setBackgroundColor(Color color) {
        SettingUtils.showDisableIfNull(colorDisable, color, isSearch);
        if(color != null){
            this.color = color;
            colorButton.setBackground(color);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        widthLabel = new javax.swing.JLabel();
        widthSpinner = new javax.swing.JSpinner();
        pxLabel1 = new javax.swing.JLabel();
        heightLabel = new javax.swing.JLabel();
        heightSpinner = new javax.swing.JSpinner();
        pxLabel2 = new javax.swing.JLabel();
        angleLabel = new javax.swing.JLabel();
        angleSpinner = new javax.swing.JSpinner();
        degreesLabel = new javax.swing.JLabel();
        colorLabel = new javax.swing.JLabel();
        colorButton = new javax.swing.JButton();
        widthDisable = new javax.swing.JCheckBox();
        heightDisable = new javax.swing.JCheckBox();
        angleDisable = new javax.swing.JCheckBox();
        colorDisable = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        widthLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        widthLabel.setText("Width");
        widthLabel.setPreferredSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(widthLabel, gridBagConstraints);

        widthSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        widthSpinner.setPreferredSize(new java.awt.Dimension(60, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, widthDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), widthSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        add(widthSpinner, new java.awt.GridBagConstraints());

        pxLabel1.setText("px");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(pxLabel1, gridBagConstraints);

        heightLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        heightLabel.setText("Height");
        heightLabel.setPreferredSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        add(heightLabel, gridBagConstraints);

        heightSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        heightSpinner.setPreferredSize(new java.awt.Dimension(60, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, heightDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), heightSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(heightSpinner, gridBagConstraints);

        pxLabel2.setText("px");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(pxLabel2, gridBagConstraints);

        angleLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        angleLabel.setText("Angle");
        angleLabel.setPreferredSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        add(angleLabel, gridBagConstraints);

        angleSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -360, 360, 1));
        angleSpinner.setPreferredSize(new java.awt.Dimension(60, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, angleDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), angleSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(angleSpinner, gridBagConstraints);

        degreesLabel.setText("deg");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        add(degreesLabel, gridBagConstraints);

        colorLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        colorLabel.setText("Background");
        colorLabel.setPreferredSize(new java.awt.Dimension(70, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        add(colorLabel, gridBagConstraints);

        colorButton.setPreferredSize(new java.awt.Dimension(60, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, colorDisable, org.jdesktop.beansbinding.ELProperty.create("${ ! selected}"), colorButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        colorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(colorButton, gridBagConstraints);

        widthDisable.setText(SettingUtils.getDisableText(isSearch));
        widthDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dimensionsDisableActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(widthDisable, gridBagConstraints);

        heightDisable.setText(SettingUtils.getDisableText(isSearch));
        heightDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dimensionsDisableActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(heightDisable, gridBagConstraints);

        angleDisable.setText(SettingUtils.getDisableText(isSearch));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(angleDisable, gridBagConstraints);

        colorDisable.setText(SettingUtils.getDisableText(isSearch));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        add(colorDisable, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void colorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButtonActionPerformed
        Color selectedColor = JColorChooser.showDialog(this, "Choose color", color);
        if(selectedColor != null){
            setBackgroundColor(selectedColor);
        }
}//GEN-LAST:event_colorButtonActionPerformed

    private void dimensionsDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dimensionsDisableActionPerformed
        if( ! isSearch){
            if( ! ((javax.swing.JCheckBox)evt.getSource()).isSelected()){
                widthDisable.setSelected(false);
                heightDisable.setSelected(false);
            } else {
                widthDisable.setSelected(true);
                widthSpinner.setValue(0);
                heightDisable.setSelected(true);
                heightSpinner.setValue(0);
            }
        }
    }//GEN-LAST:event_dimensionsDisableActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox angleDisable;
    private javax.swing.JLabel angleLabel;
    private javax.swing.JSpinner angleSpinner;
    private javax.swing.JButton colorButton;
    private javax.swing.JCheckBox colorDisable;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JLabel degreesLabel;
    private javax.swing.JCheckBox heightDisable;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JSpinner heightSpinner;
    private javax.swing.JLabel pxLabel1;
    private javax.swing.JLabel pxLabel2;
    private javax.swing.JCheckBox widthDisable;
    private javax.swing.JLabel widthLabel;
    private javax.swing.JSpinner widthSpinner;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
