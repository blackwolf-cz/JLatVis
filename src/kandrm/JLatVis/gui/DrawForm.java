/*
 * DrawForm.java
 *
 * Created on 20.3.2011, 15:53:20
 */
package kandrm.JLatVis.gui;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import kandrm.JLatVis.export.DrawConnector;
import kandrm.JLatVis.export.DrawConnector.DrawProgram;
import kandrm.JLatVis.lattice.editing.history.HistoryEventNodePosition;
import kandrm.JLatVis.lattice.logical.Lattice;
import kandrm.JLatVis.lattice.visual.NodeShape;
import math.geom2d.Point2D;

/**
 *
 * @author Michal Kandr
 */
public class DrawForm extends javax.swing.JFrame {
    DrawConnector connector = null;
    List<DrawProgram> availablePrograms;
    DrawFormHelp help;
    boolean notSet = false;

    /** Creates new form DrawForm */
    public DrawForm(DrawConnector connector) {
        initComponents();
        this.connector = connector;
        help = new DrawFormHelp();
    }
    
    private void loadPrograms(){
        programsSelect.removeAllItems();
        availablePrograms = connector.getAvailablePrograms();
        for(DrawProgram program : availablePrograms){
            programsSelect.addItem(program.getName());
        }
        if(programsSelect.getItemCount() > 0){
            setCommandProgram(0);
        }
    }

    protected void setCommandProgram(int index){
        commandField.setText( availablePrograms.get( index ).getCommand() );
    }
    
    
    public void setVisible(boolean visible, boolean notSet){
        super.setVisible(visible);
        if(visible){
            loadPrograms();
        }
        this.notSet = notSet;
    }
    @Override
    public void setVisible(boolean visible){
        setVisible(visible, false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        programsSelect = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        commandField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Drawing tool");

        jLabel1.setText("Found programs:");

        programsSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programsSelectActionPerformed(evt);
            }
        });

        jLabel2.setText("Command:");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        helpButton.setText("Drawing tool help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Choose file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(programsSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(helpButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(programsSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void programsSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programsSelectActionPerformed
        if(programsSelect.getItemCount() > 0){
            setCommandProgram( programsSelect.getSelectedIndex() );
        }
    }//GEN-LAST:event_programsSelectActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        Lattice lattice = connector.getLattice();
        if( ! commandField.getText().equals("") && lattice != null){
            try {
                Map <NodeShape, Point2D> oldNodePositions = new HashMap<NodeShape, Point2D>();
                for(NodeShape node : lattice.getShape().getNodes()){
                    oldNodePositions.put(node, node.getCenter());
                }
        
                connector.execute(commandField.getText());
        
                Map <NodeShape, Point2D> newNodePositions = new HashMap<NodeShape, Point2D>();
                for(NodeShape node : lattice.getShape().getNodes()){
                    newNodePositions.put(node, node.getCenter());
                }
                lattice.getShape().getHistory().eventPerformed( new HistoryEventNodePosition(lattice.getShape().getNodes(), oldNodePositions, newNodePositions) );

                dispose();
            } catch (Exception ex) {
                String message = ex.getMessage();
                JOptionPane.showMessageDialog(this, message == null || message.equals("") ? "Some error occured when executing external drawing program." : message, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if(notSet){
            int result = JOptionPane.showConfirmDialog(
                    this,
                    "There is no diagram for the lattice!\nIf you don't draw one, all lattice elements will be drawn on the same position.\nCancel diagram drawing?",
                    "Cancel diagram drawing?",
                    JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                dispose();
            }
        } else {
            dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        try {
            String helpCommand = connector.getHelp( availablePrograms.get(programsSelect.getSelectedIndex()).getCommand() );
            help.setText(helpCommand);
            help.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some error occured when executing external drawing program.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_helpButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jFileChooser.showDialog(this, "Select") == JFileChooser.APPROVE_OPTION) {
             File file = jFileChooser.getSelectedFile();
             commandField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField commandField;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox programsSelect;
    // End of variables declaration//GEN-END:variables
}
